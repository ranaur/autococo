#!/usr/bin/env bash
AUTOCOCODIR=$(realpath "$0")
AUTOCOCODIR=$(dirname "$AUTOCOCODIR")
SCRIPTDIR="$AUTOCOCODIR/scripts"

source "$SCRIPTDIR/autococo.sh"

function call_emulator() {
#debugfc $FUNCNAME "$@"
	if [ ! -x "$SCRIPTDIR/emulator.$EMULATOR.sh" ] ; then
		error emulator $EMULATOR does not exist!
		return -1
	fi

	. "$SCRIPTDIR/emulator.$EMULATOR.sh" "$@"
}

function cmd_download() { # URL
#debugfc $FUNCNAME "$@"
	local file=$(autococo_download "$@")
	if [[ $? == 0 ]] ; then
		echo "Download ok. Local file at $file"
		return 0
	else
		echo "ERROR: Download failed!"
		return 1
	fi
}

function cmd_infer() { # dsk/zip/cas file
#debugfc $FUNCNAME "$@"
	local ext="${1##*.}"
	filename=`basename "$1"`
	local out
	if [[ ! -z "$2" ]] ; then
		out="$2"
	else
		out="${filename%.*}.autococo"
	fi
	
	inferred__=(inferred_package inferred_setup)
	inferred_package_=(inferred_package_status)
	inferred_package_status="inferred"
	inferred_setup_=()
	infer_archive_cocoarchive "$1"

	echo "FILE: $1"
	case ${ext,,} in
	zip)
		infer_zip "$1"
		;;
	dsk)
		infer_dsk "$1"
		;;
	cas)
		infer_cas "$1"
		;;
	rom | ccc)
		infer_ccc "$1"
		;;
	*)
		echo Cannot infer for extension $ext
		return -1
	esac

#echo VARIABLES[]: ${!inferred_@}
debug out=$out
	save_yaml inferred "$out"

	return $?
}

function cmd_run() { # autococo.file dsk/zip/cas file
#echo cmd_run[$#] "$@"
	if [ $# -ne 2 ] ; then 
		cat << __HELP__
usage: $0 run file autococo

Runs file using autococo as configuration. File can be a .ZIP, .DSK, .CAS or .CCC

__HELP__
		return -1;
	fi
	
	autococo_load "$2"

	local filetype=${1##*.}
	case ${filetype,,} in
	zip)
	  WORKDIR="$WORKDIR/run"
	  unzip_at "$1" "$WORKDIR"
	  ;;
	dsk)
	  FLOPPY0="$1"
	  WORKDIR=`dirname "$1"`
	  ;;
	cas)
	  CASSETTE="$1"
	  WORKDIR=`dirname "$1"`
	  ;;
	ccc)
	  rompack="$1"
	  WORKDIR=`dirname "$1"`
	  ;;
	*)
	  echo NOT IMPLEMENTED
	  exit -1
	  ;;
	esac

	call_emulator
}

case "$1" in
  run)
    shift
    cmd_run "$@"
    exit $?
    ;;
  infer)
    shift
    cmd_infer "$@"
    exit $?
    ;;
  download)
    shift
    cmd_download "$@"
    exit $?
    ;;
  *)
    cat << __HELP__
usage: $0 command parameters ...

where command is:
  infer _file_ = infer the AUTOCOCO from file
  run _autococo_file_ _file_ = execute the file in the emulator using autococo as configuration
  download [-f] _url_ = downloads URL and stores in the archive (-f forces the download if file already exist)
__HELP__
    exit -1
    ;;
esac
